Subarray/Substring

A subarray is a contiguous part of the array. An array that is inside another array.
For example, consider the array [1, 2, 3, 4], There are 10 non-empty sub-arrays.
The subarrays are (1), (2), (3), (4), (1,2), (2,3), (3,4), (1,2,3), (2,3,4) and (1,2,3,4).
In general, for an array/string of size n, there are n*(n+1)/2 non-empty
subarrays/substrings.

subseq-vs-subarray

How to generate all subarrays?

We can run two nested loops, the outer loop picks the starting element and the inner
loop considers all elements on the right of the picked elements as the ending elements
of the subarray.

// Java program to generate all possible subarrays/subArrays
//  Complexity- O(n^3) */

class Test
{
    static int arr[] = new int[]{1, 2, 3, 4};

    // Prints all subarrays in arr[0..n-1]
    static void subArray( int n)
    {
        // Pick starting point
        for (int i=0; i <n; i++)
        {
            // Pick ending point
            for (int j=i; j<n; j++)
            {
                // Print subarray between current starting
                // and ending points
                for (int k=i; k<=j; k++)
                    System.out.print(arr[k]+" ");
              	System.out.println();
            }
        }
    }

    // Driver method to test the above function
    public static void main(String[] args)
    {
        System.out.println("All Non-empty Subarrays");
        subArray(arr.length);

    }
}

Output
All Non-empty Subarrays
1
1 2
1 2 3
1 2 3 4
2
2 3
2 3 4
3
3 4
4
Time Complexity: 0(n^3)
Auxiliary Space: 0(1)

Subsequence: A subsequence is a sequence that can be derived from another sequence by
removing zero or more elements, without changing the order of the remaining elements.

For the same example, there are 15 sub-sequences. They are (1), (2), (3), (4), (1,2),
 (1,3),(1,4), (2,3), (2,4), (3,4), (1,2,3), (1,2,4), (1,3,4), (2,3,4), (1,2,3,4).
More generally, we can say that for a sequence of size n, we can have (2n-1) non-empty
sub-sequences in total.
A string example to differentiate: Consider strings “geeksforgeeks” and “gks“. “gks”
is a subsequence of “geeksforgeeks” but not a substring. “geeks” is both a subsequence
and subarray. Every subarray is a subsequence. More specifically, Subsequence is a
generalization of substring.

A subarray or substring will always be contiguous, but a subsequence need not be
contiguous. That is, subsequences are not required to occupy consecutive positions
within the original sequences. But we can say that both contiguous subsequence and
subarray are the same.